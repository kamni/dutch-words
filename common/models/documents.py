"""
Copyright (C) J Leadbetter <j@jleadbetter.com>
Affero GPL v3
"""

import uuid
from typing import List, Optional

from pydantic import BaseModel

from .base import HashableMixin
from .users import UserDB, UserUI
from ..models.users import UserDB, UserUI
from ..utils.languages import LanguageCode


class DocumentBase(HashableMixin):
    """
    Shared base class for both Pydantic and Django models for the database.

    Must implement the following fields:

    * id
    * user (with user.id)
    * language_code
    """
    pass


class DocumentDB(DocumentBase, BaseModel):
    """
    Representation of a document to be stored in the database
    """

    id: Optional[uuid.UUID] = None  # Generated by the database when created.
    user_id: uuid.UUID  # UserSettings uuid, not django user id
    display_name: str
    language_code: LanguageCode
    file_path: Optional[str] = None
    translations: Optional[List['DocumentDB']] = None

    @property
    def unique_fields(self):
        return ['user_id', 'display_name', 'language_code']


class DocumentUIMinimal(DocumentBase, BaseModel):
    """
    Bare minimum display of documents in the UI
    Excludes Sentences and Words
    """

    id: uuid.UUID
    displayName: str
    languageCode: LanguageCode


class DocumentUI(DocumentBase, BaseModel):
    """
    Full document for display in the UI
    """

    id: uuid.UUID
    # TODO: rest of the model
