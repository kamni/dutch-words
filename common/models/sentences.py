"""
Copyright (C) J Leadbetter <j@jleadbetter.com>
Affero GPL v3
"""

from typing import List, Optional

from pydantic import BaseModel

from .conjugations import ConjugationDB, ConjugationDBMinimal, ConjugationUI
from .users import UserUI
from ..utils.language import LanguageCode


class SentenceDBMinimal(BaseModel):
    """
    Minimal representation of a sentence stored in the database
    """

    id: str  # UUID
    document_id: str  # UUID
    order: int  # Relative to the DocumentDB


class SentenceDB(BaseModel):
    """
    Representation of a sentence to be stored in the database
    """

    id = Optional[str] = None  # UUID. Generated by the database.
    user_id: str  # UUID. Taken from DocumentUI.user.id
    language_code: LanguageCode
    text: str
    audio_file: Optional[str] = None  # Relative path in the file system
    translations: Optional[List[SentenceDBMinimal]] = None
    order: int  # Relative to the DocumentDB
    conjugations: List[ConjugationDBMinimal]


class SentenceUIMinimal(BaseModel):
    """
    Minimal representation of a sentence in the UI.
    Does not include individual words or user tracking.
    """

    id: str  # UUID
    languageCode: LanguageCode
    text: str
    audioFile: Optional[str] = None  # Relative path from the UI's perspective


class SentenceUI(BaseModel):
    """
    Full representation of a sentence in the UI.
    Includes words with tracking information.
    """

    id: str  # UUID
    user: UserUI
    languageCode: LanguageCode
    text: str
    audioFile: Optional[str] = None  # Relative path from the UI's perspective
    translations: OptionalList[SentenceUIMinimal] = None
    order: int  # Relative to the DocumentUI
    conjugations: List[ConjugationUI]
