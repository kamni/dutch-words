"""
Copyright (C) J Leadbetter <j@jleadbetter.com>
Affero GPL v3
"""

from enum import StrEnum
from typing import Optional

from pydantic import BaseModel

from .base import HashableMixin
from .users import UserUI
from ..utils.languages import LanguageCode


class TrackerStatus(StrEnum):
    """
    Status explanations:

    * learned: The user is comfortable with this word
      and doesn't wish to train on it.

    * currently_learning: The user is currently learning this word.

    * waiting_to_learn: The user has not yet added this word to the
      learning rotation.

    * unknown: The user has not yet created a conjugation for this word.

    * hidden: The user wishes to hide this word from the learning process.
      This is most useful for articles and prepositions,
      which aren't represented in this app.
    """

    learned = 'learned'
    currently_learning = 'currently_learning'
    waiting_to_learn = 'waiting_to_learn'
    hidden = 'hidden'


class ProgressTrackerDB(HashableMixin, BaseModel):
    """
    Tracks user progress with conjugations.
    """

    id: Optional[str] = None  # UUID. Generated by the database.
    user_id: str  # UUID
    conjugation_id: str  # UUID
    language_code: LanguageCode
    status: Optional[TrackerStatus] = TrackerStatus.waiting_to_learn

    @property
    def unique_fields(self):
        return ['user_id', 'conjugation_id']


class ProgressTrackerUI(HashableMixin, BaseModel):
    """
    Representation of progress tracker in the UI
    """

    id: str  # UUID. Generated by the database.
    user: UserUI
    conjugation: 'ConjugationUI'
    languageCode: LanguageCode
    status: TrackerStatus
