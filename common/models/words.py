"""
Copyright (C) J Leadbetter <j@jleadbetter.com>
Affero GPL v3

A word in this context is a root word in a language.
For example, the English verb 'to go' is the root word.
Variations of 'to go' -- like 'went' or 'goes' are stored as Conjugations.
"""

import importlib
import sys
import uuid
from enum import StrEnum
from functools import partial
from typing import Any, Dict, List, Optional

from pydantic import BaseModel

from .base import HashableMixin
from .conjugations import ConjugationDBMinimal, ConjugationUI
from .users import UserUI
from ..utils.languages import LanguageCode


class PartOfSpeechType(StrEnum):
    """
    Grammatical part of speech.

    NOTES:

    * Articles are not included here.
      They should be included as part of a noun.

    * Prepositions are not included here,
      because they don't translate well between languages.
      They should be paired with either a verb, noun, or an expression.

    * Expressions are for multiple words that mean something different
      than their individual words, and are normally learned fields.
      Examples: 'Merry Christmas' and 'It's raining cats and dogs'

    * The 'unknown' type is used for newly imported words,
      until the user or a script sets the type.
    """
    unknown = 'unknown'
    noun = 'noun'
    pronoun = 'pronoun'
    adjective = 'adjective'
    adverb = 'adverb'
    verb = 'verb'
    participle = 'participle'
    conjunction = 'conjunction'
    expression = 'expression'


class WordDBMinimal(HashableMixin, BaseModel):
    """
    Minimal representation of a word in the database
    """

    id: str  # UUID
    conjugation_id: str  # UUID


class WordDB(HashableMixin, BaseModel):
    """
    Database representation of a word
    """

    id: Optional[str] = None  # UUID. Generated by the database.
    user_id: str  # UUID. Taken from DocumentUI.user.id
    language_code: LanguageCode
    type: PartOfSpeechType
    text: str
    audio_file: Optional[str] = None  # Relative path in the file system
    translations: Optional[List[WordDBMinimal]] = None
    conjugations: List[ConjugationDBMinimal]

    @property
    def unique_fields(self):
        return ['user_id', 'language_code', 'type', 'text']


class WordUIMinimal(HashableMixin, BaseModel):
    """
    Minimal representation of the word in the UI.
    Does not include conjugations
    """

    id: str  # UUID
    languageCode: LanguageCode
    type: PartOfSpeechType
    text: str
    audioFile: Optional[str] = None  # Relative path from the UI's perspective


class WordUI(HashableMixin, BaseModel):
    """
    Full representation of a word in the UI.
    Includes conjugations with user tracking information.
    """

    id: str  # UUID
    user: UserUI
    languageCode: LanguageCode
    type: PartOfSpeechType
    text: str
    audioFile: Optional[str] = None  # Relative path from the UI's perspective
    translations: Optional[List[WordUIMinimal]] = None
    conjugations: List[ConjugationUI]
